/**
 * Ctrl+X, Ctrl+V
 *
 * Петя решил написать свой собственный текстовый редактор и просит вас помочь протестировать его прототип.
 * На текущей стадии разработки в редакторе есть только возможность загрузить файл
 * и выполнять с ним такие действия:
 *  переместить курсор на строчку вниз (Down)
 *  переместить курсор на строчку вверх (Up)
 *  вырезать текущую строку в буфер обмена (Ctrl+X)
 *  вставить строку из буфера перед текущей строкой (Ctrl+V)
 *
 * Изначально курсор находится на первой (начальной) строке.
 * Операции Down с курсором на последней строке и Up с курсором на первой строке должны игнорироваться.
 * Любой текстовый файл в системе заканчивается переводом строки. Поэтому последняя строка любого файла
 * является пустой. Операция Ctrl+X на пустой строке ничего не делает.
 * Изначально буфер редактора пустой. Операция Ctrl+X перезаписывает буфер, если в нём уже было какое-то
 * значение. Операция Ctrl+V не очищает буфер и может быть использована несколько раз подряд. Операция Ctrl+V
 * при пустом буфере ничего не делает.
 *
 * Помогите Пете протестировать его текстовый редактор. Напишите программу, которая по заданному файлу
 * и набору команд выводит получившийся файл.
 *
 * Формат ввода
 * Программе на вход подаётся набор строк, разделённых переносом строки. Длина каждой строки не превышает
 * 3000 символов. Последняя строка в файле является пустой. Она означает завершение ввода файла. Других
 * пустых строк в файле быть не может.
 * После этого и до окончания ввода программе подаются команды Down, Up, Ctrl+X, Ctrl+V.
 *
 * Формат вывода
 * Выведите получившийся файл построчно.
 */

#include <iostream>
#include <list>
#include <string>

int main()
{
    std::list<std::string> text;
    std::list<std::string> clipboard;
    std::string line;
    while (std::getline(std::cin, line))
    {
        if (line.length() == 0)
        {
            break;
        }
        text.push_back(line);
    }

    std::string command;
    auto current = text.begin();

    while (std::getline(std::cin, command))
    {
        if (command == "Up")
        {
            if (current != text.begin())
            {
                current--;
            }
        }
        else if (command == "Down")
        {
            if (current != text.end())
            {
                current++;
            }
        }
        else if (command == "Ctrl+X")
        {
            if (current != text.end())
            {
                clipboard.clear();

                auto toSplice = current;
                current = std::next(current);
                clipboard.splice(clipboard.begin(), text, toSplice);
            }
        }
        else if (command == "Ctrl+V")
        {
            text.insert(current, clipboard.begin(), clipboard.end());
        }
    }

    for (const auto &item : text)
    {
        std::cout << item << std::endl;
    }
}
