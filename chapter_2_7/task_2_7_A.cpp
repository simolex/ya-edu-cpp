/**
 * ArgMax –≤ –º–∞—Ç—Ä–∏—Ü–µ
 *
 * –í–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞ C++ —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º:
 * std::pair<size_t, size_t> MatrixArgMax(const std::vector<std::vector<int>>& matrix);
 *
 * –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –ø–∞—Ä—É –∏–∑ –∏–Ω–¥–µ–∫—Å–æ–≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Ç—Ä–∏—Ü–µ. –ï—Å–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö
 * —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –Ω–∞–∏–º–µ–Ω—å—à—É—é —Ç–∞–∫—É—é –ø–∞—Ä—É.
 *
 * –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞
 * –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –¥–≤—É–º—è —á–∏—Å–ª–∞–º–∏ n –∏ k –∑–∞–¥–∞–Ω —Ä–∞–∑–º–µ—Ä –º–∞—Ç—Ä–∏—Ü—ã. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Öùëõn —Å—Ç—Ä–æ–∫–∞—Ö –≤–≤–æ–¥–∏—Ç—Å—è
 * —á–∏—Å–ª–æ–≤–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –≤ k —Å—Ç–æ–ª–±—Ü–æ–≤.
 *
 * –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
 * –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Ç—Ä–∏—Ü–µ.
 */

#include <iostream>
#include <vector>

std::pair<size_t, size_t> MatrixArgMax(const std::vector<std::vector<int>> &matrix);

std::ostream &operator<<(std::ostream &stream, const std::pair<size_t, size_t> &pos)
{
    stream << pos.first << " " << pos.second;
    return stream;
}

int main()
{
    size_t n, k;
    size_t maxI, maxJ;

    std::cin >> n >> k;
    std::vector<std::vector<int>> matrix(n, std::vector<int>(k));

    for (size_t i = 0; i < n; ++i)
    {
        for (size_t j = 0; j < k; ++j)
        {
            std::cin >> matrix[i][j];
        }
    }

    std::cout << MatrixArgMax(matrix) << std::endl;
}

std::pair<size_t, size_t> MatrixArgMax(const std::vector<std::vector<int>> &matrix)
{
    std::pair<size_t, size_t> maxPosition(0, 0);
    size_t n = matrix.size();
    size_t k = matrix[0].size();
    int max = matrix[0][0];

    for (size_t i = 0; i < n; ++i)
    {
        for (size_t j = 0; j < k; ++j)
        {
            if (matrix[i][j] > max)
            {
                max = matrix[i][j];
                maxPosition = {i, j};
            };
        }
    }
    return maxPosition;
}